; This configures the MQTT event handler. Events are sent either on
; one topic or on a topic per event type.
;
; By default, configuration topics for handle and webrtc event types
; with the base topic are configured to /janus/events, e.g.:
;	/janus/events/handle
;	/janus/events/webrtc

[general]
enabled = no			; By default the module is not enabled
events = all			; Comma separated list of the events mask you're interested
						; in. Valid values are none, sessions, handles, jsep, webrtc,
						; media, plugins, transports, core, external and all. By
						; default we subscribe to everything (all)
json = indented			; Whether the JSON messages should be indented (default),
						; plain (no indentation) or compact (no indentation and no spaces)

url = tcp://localhost:1883		; The URL of the MQTT server. Only tcp supported at this time.
client_id = janus.example.com	; Janus client id. You have to configure a unique ID.
;keep_alive_interval = 20		; Keep connection for N seconds (default: 30)
;cleansession = 0				; Clean session flag (default: off)
;mqtt_qos = 1					; Default MQTT QoS for published events
;disconnect_timeout = 100		; Seconds to wait before destroying client
;username = guest				; Username for authentication (default: no authentication)
;password = guest				; Password for authentication (default: no authentication)
;topic=/janus/events			; Base topic (default: /janus/events)
;addtype = yes					; Whether we should add the event type to the base topic


; Additional parameters if "mqtts://" schema is used
;tls_verify_peer = yes			; Whether peer verification must be enabled
;tls_verify_hostname = yes		; Whether hostname verification must be enabled

; Certificates to use when SSL support is enabled, if needed
;tls_cacert = /path/to/cacert.pem
;tls_client_cert = /path/to/cert.pem
;tls_client_key = /path/to/key.pem
;tls_ciphers
;tls_version
